<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>
  <dependencies>
    <!-- Include kawa runtime depedency -->
    <dependency>
      <groupId>com.github.arvyy</groupId>
      <artifactId>kawa</artifactId>
      <version>3.1.1</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>com.github.arvyy</groupId>
          <artifactId>kawa-maven-plugin</artifactId>
	  <version>0.0.8</version>
	  <configuration>
	    <compileCommand>
		<str>java</str>
		<str>-Dkawa.import.path=@KAWAIMPORT@SEPARATOR@PROJECTROOT/src/main/webapp/@GROUPID/WEB-INF/classes</str>
		<str>kawa.repl</str>
		<str>--target</str>
		<str>6</str>
		<str>--servlet</str>
		<str>-d</str>
		<str>@PROJECTROOT/src/main/webapp/@GROUPID/WEB-INF/classes</str>
		<str>-C</str>
		<str>@PROJECTROOT/src/main/webapp/@GROUPID/WEB-INF/classes/main.scm</str>
	    </compileCommand>
	  </configuration>
          <extensions>true</extensions>
          <executions>
            <!--
              The below attaches kawa:test goal to maven test phase
              This way, when calling `mvn install`, kawa tests will be automatically executed
              and will fail the build / installation if there are test errors
              Remove if you don't have tests (shame on you)
            -->
            <execution>
              <id>test</id>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
            <!-- similarly, attach kawa:compile goal to maven compile phase, to produce class artifacts when calling `mvn package` -->
            <execution>
              <id>compile</id>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!--
             add a shade plugin like this, which packages all jar dependencies (including kawa) into final
             jar artifact, making it standalone
             If you omit this, you will have to manually assemble classpath / jars at runtime
            -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.4</version>
          <configuration>
            <transformers>
              <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                <mainClass>main</mainClass>
              </transformer>
            </transformers>
          </configuration>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
